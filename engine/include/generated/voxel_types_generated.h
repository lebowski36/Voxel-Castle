/*
 * Voxel Block Type Definitions
 * 
 * AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
 * Generated on: 2025-06-08T15:40:49.379382
 * Source: JSON block definitions + ID registry
 * 
 * This file is automatically generated by scripts/generators/cpp_generator.py
 * To update this file, modify the JSON data files and run the generator.
 */

#ifndef GENERATED_VOXEL_TYPES_GENERATED_H_H
#define GENERATED_VOXEL_TYPES_GENERATED_H_H

#include <cstdint>
#include <string>
#include <unordered_map>
#include <vector>

namespace VoxelEngine {

// Forward declarations
struct BlockProperties;

// Voxel block type enumeration
enum class VoxelType : uint16_t {
    // TERRAIN BLOCKS
    AIR = 0,
    STONE = 1,
    DIRT = 2,
    GRASS = 3,
    SAND = 4,
    GRAVEL = 5,
    CLAY = 6,
    BEDROCK = 7,
    TOPSOIL = 8,
    SUBSOIL = 9,
    GRANITE = 10,
    LIMESTONE = 11,
    MARBLE = 12,
    SANDSTONE = 13,
    SLATE = 14,
    BASALT = 15,
    QUARTZITE = 16,
    OBSIDIAN = 17,
    PUMICE = 18,
    SHALE = 19,
    COAL_ORE = 20,
    IRON_ORE = 21,
    COPPER_ORE = 22,
    TIN_ORE = 23,
    SILVER_ORE = 24,
    GOLD_ORE = 25,
    RUBY = 26,
    SAPPHIRE = 27,
    EMERALD = 28,
    DIAMOND = 29,
    OAK_WOOD = 30,
    PINE_WOOD = 31,
    BIRCH_WOOD = 32,
    MAHOGANY_WOOD = 33,
    OAK_LEAVES = 34,
    PINE_LEAVES = 35,
    BIRCH_LEAVES = 36,
    PALM_LEAVES = 37,
    BROWN_MUSHROOM = 38,
    RED_MUSHROOM = 39,
    SNOW = 40,
    ICE = 41,
    PACKED_ICE = 42,
    CACTUS = 43,
    JUNGLE_VINE = 44,
    PINK_CORAL = 45,
    BLUE_CORAL = 46,
    SEAWEED = 47,
    TUNDRA_MOSS = 48,
    DESERT_ROCK = 49,
    TEST_AUTO_ID = 256,

    // FLUIDS BLOCKS
    WATER = 50,
    LAVA = 51,
    OIL = 52,
    ACID = 53,
    HONEY = 54,
    STEAM = 55,
    TOXIC_GAS = 56,
    NATURAL_GAS = 57,
    MAGICAL_MIST = 58,
    SMOKE = 59,

    // PROCESSED BLOCKS
    STONE_BRICK = 60,
    GRANITE_BRICK = 61,
    MARBLE_TILE = 62,
    SANDSTONE_BRICK = 63,
    SLATE_TILE = 64,
    COBBLESTONE = 65,
    SMOOTH_STONE = 66,
    POLISHED_STONE = 67,
    CHISELED_STONE = 68,
    FLAGSTONE = 69,
    OAK_PLANKS = 70,
    PINE_PLANKS = 71,
    BIRCH_PLANKS = 72,
    MAHOGANY_PLANKS = 73,
    OAK_BEAM = 74,
    PINE_BEAM = 75,
    HARDWOOD_BEAM = 76,
    BAMBOO_PLANKS = 77,
    CORK = 78,
    CHARCOAL_BLOCK = 79,
    IRON_BLOCK = 80,
    COPPER_BLOCK = 81,
    BRONZE_BLOCK = 82,
    STEEL_BLOCK = 83,
    SILVER_BLOCK = 84,
    GOLD_BLOCK = 85,
    BRASS_BLOCK = 86,
    PEWTER_BLOCK = 87,
    MITHRIL_BLOCK = 88,
    ADAMANTINE_BLOCK = 89,
    CLAY_BRICK = 90,
    TERRACOTTA = 91,
    WHITE_GLAZED_CERAMIC = 92,
    RED_GLAZED_CERAMIC = 93,
    BLUE_GLAZED_CERAMIC = 94,
    GREEN_GLAZED_CERAMIC = 95,
    PORCELAIN = 96,
    STONEWARE = 97,
    EARTHENWARE = 98,
    CERAMIC_TILE = 99,

    // FUNCTIONAL BLOCKS
    BLOCK_100 = 100,
    BLOCK_101 = 101,
    BLOCK_102 = 102,
    BLOCK_103 = 103,
    BLOCK_104 = 104,
    BLOCK_105 = 105,
    BLOCK_106 = 106,
    BLOCK_107 = 107,
    BLOCK_108 = 108,
    BLOCK_109 = 109,
    BLOCK_110 = 110,
    BLOCK_111 = 111,
    BLOCK_112 = 112,
    BLOCK_113 = 113,
    BLOCK_114 = 114,
    BLOCK_115 = 115,
    BLOCK_116 = 116,
    BLOCK_117 = 117,
    BLOCK_118 = 118,
    BLOCK_119 = 119,
    BLOCK_120 = 120,
    BLOCK_121 = 121,
    BLOCK_122 = 122,
    BLOCK_123 = 123,
    BLOCK_124 = 124,
    BLOCK_125 = 125,
    BLOCK_126 = 126,
    BLOCK_127 = 127,
    BLOCK_128 = 128,
    BLOCK_129 = 129,
    BLOCK_130 = 130,
    BLOCK_131 = 131,
    BLOCK_132 = 132,
    BLOCK_133 = 133,
    BLOCK_134 = 134,
    BLOCK_135 = 135,
    BLOCK_136 = 136,
    BLOCK_137 = 137,
    BLOCK_138 = 138,
    BLOCK_139 = 139,
    BLOCK_140 = 140,
    BLOCK_141 = 141,
    BLOCK_142 = 142,
    BLOCK_143 = 143,
    BLOCK_144 = 144,
    BLOCK_145 = 145,
    BLOCK_146 = 146,
    BLOCK_147 = 147,
    BLOCK_148 = 148,
    BLOCK_149 = 149,

    // ADVANCED BLOCKS
    BLOCK_150 = 150,
    BLOCK_151 = 151,
    BLOCK_152 = 152,
    BLOCK_153 = 153,
    BLOCK_154 = 154,
    BLOCK_155 = 155,
    BLOCK_156 = 156,
    BLOCK_157 = 157,
    BLOCK_158 = 158,
    BLOCK_159 = 159,
    BLOCK_160 = 160,
    BLOCK_161 = 161,
    BLOCK_162 = 162,
    BLOCK_163 = 163,
    BLOCK_164 = 164,
    BLOCK_165 = 165,
    BLOCK_166 = 166,
    BLOCK_167 = 167,
    BLOCK_168 = 168,
    BLOCK_169 = 169,
    BLOCK_170 = 170,
    BLOCK_171 = 171,
    BLOCK_172 = 172,
    BLOCK_173 = 173,
    BLOCK_174 = 174,
    BLOCK_175 = 175,
    BLOCK_176 = 176,
    BLOCK_177 = 177,
    BLOCK_178 = 178,
    BLOCK_179 = 179,

    // PLACEHOLDER BLOCKS
    BLOCK_180 = 180,
    BLOCK_181 = 181,
    BLOCK_182 = 182,
    BLOCK_183 = 183,
    BLOCK_184 = 184,
    BLOCK_185 = 185,
    BLOCK_186 = 186,
    BLOCK_187 = 187,
    BLOCK_188 = 188,
    BLOCK_189 = 189,
    BLOCK_190 = 190,
    BLOCK_191 = 191,
    BLOCK_192 = 192,
    BLOCK_193 = 193,
    BLOCK_194 = 194,
    BLOCK_195 = 195,
    BLOCK_196 = 196,
    BLOCK_197 = 197,
    BLOCK_198 = 198,
    BLOCK_199 = 199,
    BLOCK_200 = 200,
    BLOCK_201 = 201,
    BLOCK_202 = 202,
    BLOCK_203 = 203,
    BLOCK_204 = 204,
    BLOCK_205 = 205,
    BLOCK_206 = 206,
    BLOCK_207 = 207,
    BLOCK_208 = 208,
    BLOCK_209 = 209,
    BLOCK_210 = 210,
    BLOCK_211 = 211,
    BLOCK_212 = 212,
    BLOCK_213 = 213,
    BLOCK_214 = 214,
    BLOCK_215 = 215,
    BLOCK_216 = 216,
    BLOCK_217 = 217,
    BLOCK_218 = 218,
    BLOCK_219 = 219,
    BLOCK_220 = 220,
    BLOCK_221 = 221,
    BLOCK_222 = 222,
    BLOCK_223 = 223,
    BLOCK_224 = 224,
    BLOCK_225 = 225,
    BLOCK_226 = 226,
    BLOCK_227 = 227,
    BLOCK_228 = 228,
    BLOCK_229 = 229,
    BLOCK_230 = 230,
    BLOCK_231 = 231,
    BLOCK_232 = 232,
    BLOCK_233 = 233,
    BLOCK_234 = 234,
    BLOCK_235 = 235,
    BLOCK_236 = 236,
    BLOCK_237 = 237,
    BLOCK_238 = 238,
    BLOCK_239 = 239,
    BLOCK_240 = 240,
    BLOCK_241 = 241,
    BLOCK_242 = 242,
    BLOCK_243 = 243,
    BLOCK_244 = 244,
    BLOCK_245 = 245,
    BLOCK_246 = 246,
    BLOCK_247 = 247,
    BLOCK_248 = 248,
    BLOCK_249 = 249,
    BLOCK_250 = 250,
    BLOCK_251 = 251,
    BLOCK_252 = 252,
    BLOCK_253 = 253,
    BLOCK_254 = 254,
    BLOCK_255 = 255,

    // Utility values
    COUNT = 257,
    INVALID = 65535
};

// Block type constants for easier usage
namespace BlockTypes {
    // TERRAIN
    constexpr VoxelType BLOCK_AIR = VoxelType::AIR;
    constexpr VoxelType BLOCK_STONE = VoxelType::STONE;
    constexpr VoxelType BLOCK_DIRT = VoxelType::DIRT;
    constexpr VoxelType BLOCK_GRASS = VoxelType::GRASS;
    constexpr VoxelType BLOCK_SAND = VoxelType::SAND;
    constexpr VoxelType BLOCK_GRAVEL = VoxelType::GRAVEL;
    constexpr VoxelType BLOCK_CLAY = VoxelType::CLAY;
    constexpr VoxelType BLOCK_BEDROCK = VoxelType::BEDROCK;
    constexpr VoxelType BLOCK_TOPSOIL = VoxelType::TOPSOIL;
    constexpr VoxelType BLOCK_SUBSOIL = VoxelType::SUBSOIL;
    constexpr VoxelType BLOCK_GRANITE = VoxelType::GRANITE;
    constexpr VoxelType BLOCK_LIMESTONE = VoxelType::LIMESTONE;
    constexpr VoxelType BLOCK_MARBLE = VoxelType::MARBLE;
    constexpr VoxelType BLOCK_SANDSTONE = VoxelType::SANDSTONE;
    constexpr VoxelType BLOCK_SLATE = VoxelType::SLATE;
    constexpr VoxelType BLOCK_BASALT = VoxelType::BASALT;
    constexpr VoxelType BLOCK_QUARTZITE = VoxelType::QUARTZITE;
    constexpr VoxelType BLOCK_OBSIDIAN = VoxelType::OBSIDIAN;
    constexpr VoxelType BLOCK_PUMICE = VoxelType::PUMICE;
    constexpr VoxelType BLOCK_SHALE = VoxelType::SHALE;
    constexpr VoxelType BLOCK_COAL_ORE = VoxelType::COAL_ORE;
    constexpr VoxelType BLOCK_IRON_ORE = VoxelType::IRON_ORE;
    constexpr VoxelType BLOCK_COPPER_ORE = VoxelType::COPPER_ORE;
    constexpr VoxelType BLOCK_TIN_ORE = VoxelType::TIN_ORE;
    constexpr VoxelType BLOCK_SILVER_ORE = VoxelType::SILVER_ORE;
    constexpr VoxelType BLOCK_GOLD_ORE = VoxelType::GOLD_ORE;
    constexpr VoxelType BLOCK_RUBY = VoxelType::RUBY;
    constexpr VoxelType BLOCK_SAPPHIRE = VoxelType::SAPPHIRE;
    constexpr VoxelType BLOCK_EMERALD = VoxelType::EMERALD;
    constexpr VoxelType BLOCK_DIAMOND = VoxelType::DIAMOND;
    constexpr VoxelType BLOCK_OAK_WOOD = VoxelType::OAK_WOOD;
    constexpr VoxelType BLOCK_PINE_WOOD = VoxelType::PINE_WOOD;
    constexpr VoxelType BLOCK_BIRCH_WOOD = VoxelType::BIRCH_WOOD;
    constexpr VoxelType BLOCK_MAHOGANY_WOOD = VoxelType::MAHOGANY_WOOD;
    constexpr VoxelType BLOCK_OAK_LEAVES = VoxelType::OAK_LEAVES;
    constexpr VoxelType BLOCK_PINE_LEAVES = VoxelType::PINE_LEAVES;
    constexpr VoxelType BLOCK_BIRCH_LEAVES = VoxelType::BIRCH_LEAVES;
    constexpr VoxelType BLOCK_PALM_LEAVES = VoxelType::PALM_LEAVES;
    constexpr VoxelType BLOCK_BROWN_MUSHROOM = VoxelType::BROWN_MUSHROOM;
    constexpr VoxelType BLOCK_RED_MUSHROOM = VoxelType::RED_MUSHROOM;
    constexpr VoxelType BLOCK_SNOW = VoxelType::SNOW;
    constexpr VoxelType BLOCK_ICE = VoxelType::ICE;
    constexpr VoxelType BLOCK_PACKED_ICE = VoxelType::PACKED_ICE;
    constexpr VoxelType BLOCK_CACTUS = VoxelType::CACTUS;
    constexpr VoxelType BLOCK_JUNGLE_VINE = VoxelType::JUNGLE_VINE;
    constexpr VoxelType BLOCK_PINK_CORAL = VoxelType::PINK_CORAL;
    constexpr VoxelType BLOCK_BLUE_CORAL = VoxelType::BLUE_CORAL;
    constexpr VoxelType BLOCK_SEAWEED = VoxelType::SEAWEED;
    constexpr VoxelType BLOCK_TUNDRA_MOSS = VoxelType::TUNDRA_MOSS;
    constexpr VoxelType BLOCK_DESERT_ROCK = VoxelType::DESERT_ROCK;
    constexpr VoxelType BLOCK_TEST_AUTO_ID = VoxelType::TEST_AUTO_ID;

    // FLUIDS
    constexpr VoxelType BLOCK_WATER = VoxelType::WATER;
    constexpr VoxelType BLOCK_LAVA = VoxelType::LAVA;
    constexpr VoxelType BLOCK_OIL = VoxelType::OIL;
    constexpr VoxelType BLOCK_ACID = VoxelType::ACID;
    constexpr VoxelType BLOCK_HONEY = VoxelType::HONEY;
    constexpr VoxelType BLOCK_STEAM = VoxelType::STEAM;
    constexpr VoxelType BLOCK_TOXIC_GAS = VoxelType::TOXIC_GAS;
    constexpr VoxelType BLOCK_NATURAL_GAS = VoxelType::NATURAL_GAS;
    constexpr VoxelType BLOCK_MAGICAL_MIST = VoxelType::MAGICAL_MIST;
    constexpr VoxelType BLOCK_SMOKE = VoxelType::SMOKE;

    // PROCESSED
    constexpr VoxelType BLOCK_STONE_BRICK = VoxelType::STONE_BRICK;
    constexpr VoxelType BLOCK_GRANITE_BRICK = VoxelType::GRANITE_BRICK;
    constexpr VoxelType BLOCK_MARBLE_TILE = VoxelType::MARBLE_TILE;
    constexpr VoxelType BLOCK_SANDSTONE_BRICK = VoxelType::SANDSTONE_BRICK;
    constexpr VoxelType BLOCK_SLATE_TILE = VoxelType::SLATE_TILE;
    constexpr VoxelType BLOCK_COBBLESTONE = VoxelType::COBBLESTONE;
    constexpr VoxelType BLOCK_SMOOTH_STONE = VoxelType::SMOOTH_STONE;
    constexpr VoxelType BLOCK_POLISHED_STONE = VoxelType::POLISHED_STONE;
    constexpr VoxelType BLOCK_CHISELED_STONE = VoxelType::CHISELED_STONE;
    constexpr VoxelType BLOCK_FLAGSTONE = VoxelType::FLAGSTONE;
    constexpr VoxelType BLOCK_OAK_PLANKS = VoxelType::OAK_PLANKS;
    constexpr VoxelType BLOCK_PINE_PLANKS = VoxelType::PINE_PLANKS;
    constexpr VoxelType BLOCK_BIRCH_PLANKS = VoxelType::BIRCH_PLANKS;
    constexpr VoxelType BLOCK_MAHOGANY_PLANKS = VoxelType::MAHOGANY_PLANKS;
    constexpr VoxelType BLOCK_OAK_BEAM = VoxelType::OAK_BEAM;
    constexpr VoxelType BLOCK_PINE_BEAM = VoxelType::PINE_BEAM;
    constexpr VoxelType BLOCK_HARDWOOD_BEAM = VoxelType::HARDWOOD_BEAM;
    constexpr VoxelType BLOCK_BAMBOO_PLANKS = VoxelType::BAMBOO_PLANKS;
    constexpr VoxelType BLOCK_CORK = VoxelType::CORK;
    constexpr VoxelType BLOCK_CHARCOAL_BLOCK = VoxelType::CHARCOAL_BLOCK;
    constexpr VoxelType BLOCK_IRON_BLOCK = VoxelType::IRON_BLOCK;
    constexpr VoxelType BLOCK_COPPER_BLOCK = VoxelType::COPPER_BLOCK;
    constexpr VoxelType BLOCK_BRONZE_BLOCK = VoxelType::BRONZE_BLOCK;
    constexpr VoxelType BLOCK_STEEL_BLOCK = VoxelType::STEEL_BLOCK;
    constexpr VoxelType BLOCK_SILVER_BLOCK = VoxelType::SILVER_BLOCK;
    constexpr VoxelType BLOCK_GOLD_BLOCK = VoxelType::GOLD_BLOCK;
    constexpr VoxelType BLOCK_BRASS_BLOCK = VoxelType::BRASS_BLOCK;
    constexpr VoxelType BLOCK_PEWTER_BLOCK = VoxelType::PEWTER_BLOCK;
    constexpr VoxelType BLOCK_MITHRIL_BLOCK = VoxelType::MITHRIL_BLOCK;
    constexpr VoxelType BLOCK_ADAMANTINE_BLOCK = VoxelType::ADAMANTINE_BLOCK;
    constexpr VoxelType BLOCK_CLAY_BRICK = VoxelType::CLAY_BRICK;
    constexpr VoxelType BLOCK_TERRACOTTA = VoxelType::TERRACOTTA;
    constexpr VoxelType BLOCK_WHITE_GLAZED_CERAMIC = VoxelType::WHITE_GLAZED_CERAMIC;
    constexpr VoxelType BLOCK_RED_GLAZED_CERAMIC = VoxelType::RED_GLAZED_CERAMIC;
    constexpr VoxelType BLOCK_BLUE_GLAZED_CERAMIC = VoxelType::BLUE_GLAZED_CERAMIC;
    constexpr VoxelType BLOCK_GREEN_GLAZED_CERAMIC = VoxelType::GREEN_GLAZED_CERAMIC;
    constexpr VoxelType BLOCK_PORCELAIN = VoxelType::PORCELAIN;
    constexpr VoxelType BLOCK_STONEWARE = VoxelType::STONEWARE;
    constexpr VoxelType BLOCK_EARTHENWARE = VoxelType::EARTHENWARE;
    constexpr VoxelType BLOCK_CERAMIC_TILE = VoxelType::CERAMIC_TILE;

    // FUNCTIONAL
    constexpr VoxelType BLOCK_BLOCK_100 = VoxelType::BLOCK_100;
    constexpr VoxelType BLOCK_BLOCK_101 = VoxelType::BLOCK_101;
    constexpr VoxelType BLOCK_BLOCK_102 = VoxelType::BLOCK_102;
    constexpr VoxelType BLOCK_BLOCK_103 = VoxelType::BLOCK_103;
    constexpr VoxelType BLOCK_BLOCK_104 = VoxelType::BLOCK_104;
    constexpr VoxelType BLOCK_BLOCK_105 = VoxelType::BLOCK_105;
    constexpr VoxelType BLOCK_BLOCK_106 = VoxelType::BLOCK_106;
    constexpr VoxelType BLOCK_BLOCK_107 = VoxelType::BLOCK_107;
    constexpr VoxelType BLOCK_BLOCK_108 = VoxelType::BLOCK_108;
    constexpr VoxelType BLOCK_BLOCK_109 = VoxelType::BLOCK_109;
    constexpr VoxelType BLOCK_BLOCK_110 = VoxelType::BLOCK_110;
    constexpr VoxelType BLOCK_BLOCK_111 = VoxelType::BLOCK_111;
    constexpr VoxelType BLOCK_BLOCK_112 = VoxelType::BLOCK_112;
    constexpr VoxelType BLOCK_BLOCK_113 = VoxelType::BLOCK_113;
    constexpr VoxelType BLOCK_BLOCK_114 = VoxelType::BLOCK_114;
    constexpr VoxelType BLOCK_BLOCK_115 = VoxelType::BLOCK_115;
    constexpr VoxelType BLOCK_BLOCK_116 = VoxelType::BLOCK_116;
    constexpr VoxelType BLOCK_BLOCK_117 = VoxelType::BLOCK_117;
    constexpr VoxelType BLOCK_BLOCK_118 = VoxelType::BLOCK_118;
    constexpr VoxelType BLOCK_BLOCK_119 = VoxelType::BLOCK_119;
    constexpr VoxelType BLOCK_BLOCK_120 = VoxelType::BLOCK_120;
    constexpr VoxelType BLOCK_BLOCK_121 = VoxelType::BLOCK_121;
    constexpr VoxelType BLOCK_BLOCK_122 = VoxelType::BLOCK_122;
    constexpr VoxelType BLOCK_BLOCK_123 = VoxelType::BLOCK_123;
    constexpr VoxelType BLOCK_BLOCK_124 = VoxelType::BLOCK_124;
    constexpr VoxelType BLOCK_BLOCK_125 = VoxelType::BLOCK_125;
    constexpr VoxelType BLOCK_BLOCK_126 = VoxelType::BLOCK_126;
    constexpr VoxelType BLOCK_BLOCK_127 = VoxelType::BLOCK_127;
    constexpr VoxelType BLOCK_BLOCK_128 = VoxelType::BLOCK_128;
    constexpr VoxelType BLOCK_BLOCK_129 = VoxelType::BLOCK_129;
    constexpr VoxelType BLOCK_BLOCK_130 = VoxelType::BLOCK_130;
    constexpr VoxelType BLOCK_BLOCK_131 = VoxelType::BLOCK_131;
    constexpr VoxelType BLOCK_BLOCK_132 = VoxelType::BLOCK_132;
    constexpr VoxelType BLOCK_BLOCK_133 = VoxelType::BLOCK_133;
    constexpr VoxelType BLOCK_BLOCK_134 = VoxelType::BLOCK_134;
    constexpr VoxelType BLOCK_BLOCK_135 = VoxelType::BLOCK_135;
    constexpr VoxelType BLOCK_BLOCK_136 = VoxelType::BLOCK_136;
    constexpr VoxelType BLOCK_BLOCK_137 = VoxelType::BLOCK_137;
    constexpr VoxelType BLOCK_BLOCK_138 = VoxelType::BLOCK_138;
    constexpr VoxelType BLOCK_BLOCK_139 = VoxelType::BLOCK_139;
    constexpr VoxelType BLOCK_BLOCK_140 = VoxelType::BLOCK_140;
    constexpr VoxelType BLOCK_BLOCK_141 = VoxelType::BLOCK_141;
    constexpr VoxelType BLOCK_BLOCK_142 = VoxelType::BLOCK_142;
    constexpr VoxelType BLOCK_BLOCK_143 = VoxelType::BLOCK_143;
    constexpr VoxelType BLOCK_BLOCK_144 = VoxelType::BLOCK_144;
    constexpr VoxelType BLOCK_BLOCK_145 = VoxelType::BLOCK_145;
    constexpr VoxelType BLOCK_BLOCK_146 = VoxelType::BLOCK_146;
    constexpr VoxelType BLOCK_BLOCK_147 = VoxelType::BLOCK_147;
    constexpr VoxelType BLOCK_BLOCK_148 = VoxelType::BLOCK_148;
    constexpr VoxelType BLOCK_BLOCK_149 = VoxelType::BLOCK_149;

    // ADVANCED
    constexpr VoxelType BLOCK_BLOCK_150 = VoxelType::BLOCK_150;
    constexpr VoxelType BLOCK_BLOCK_151 = VoxelType::BLOCK_151;
    constexpr VoxelType BLOCK_BLOCK_152 = VoxelType::BLOCK_152;
    constexpr VoxelType BLOCK_BLOCK_153 = VoxelType::BLOCK_153;
    constexpr VoxelType BLOCK_BLOCK_154 = VoxelType::BLOCK_154;
    constexpr VoxelType BLOCK_BLOCK_155 = VoxelType::BLOCK_155;
    constexpr VoxelType BLOCK_BLOCK_156 = VoxelType::BLOCK_156;
    constexpr VoxelType BLOCK_BLOCK_157 = VoxelType::BLOCK_157;
    constexpr VoxelType BLOCK_BLOCK_158 = VoxelType::BLOCK_158;
    constexpr VoxelType BLOCK_BLOCK_159 = VoxelType::BLOCK_159;
    constexpr VoxelType BLOCK_BLOCK_160 = VoxelType::BLOCK_160;
    constexpr VoxelType BLOCK_BLOCK_161 = VoxelType::BLOCK_161;
    constexpr VoxelType BLOCK_BLOCK_162 = VoxelType::BLOCK_162;
    constexpr VoxelType BLOCK_BLOCK_163 = VoxelType::BLOCK_163;
    constexpr VoxelType BLOCK_BLOCK_164 = VoxelType::BLOCK_164;
    constexpr VoxelType BLOCK_BLOCK_165 = VoxelType::BLOCK_165;
    constexpr VoxelType BLOCK_BLOCK_166 = VoxelType::BLOCK_166;
    constexpr VoxelType BLOCK_BLOCK_167 = VoxelType::BLOCK_167;
    constexpr VoxelType BLOCK_BLOCK_168 = VoxelType::BLOCK_168;
    constexpr VoxelType BLOCK_BLOCK_169 = VoxelType::BLOCK_169;
    constexpr VoxelType BLOCK_BLOCK_170 = VoxelType::BLOCK_170;
    constexpr VoxelType BLOCK_BLOCK_171 = VoxelType::BLOCK_171;
    constexpr VoxelType BLOCK_BLOCK_172 = VoxelType::BLOCK_172;
    constexpr VoxelType BLOCK_BLOCK_173 = VoxelType::BLOCK_173;
    constexpr VoxelType BLOCK_BLOCK_174 = VoxelType::BLOCK_174;
    constexpr VoxelType BLOCK_BLOCK_175 = VoxelType::BLOCK_175;
    constexpr VoxelType BLOCK_BLOCK_176 = VoxelType::BLOCK_176;
    constexpr VoxelType BLOCK_BLOCK_177 = VoxelType::BLOCK_177;
    constexpr VoxelType BLOCK_BLOCK_178 = VoxelType::BLOCK_178;
    constexpr VoxelType BLOCK_BLOCK_179 = VoxelType::BLOCK_179;

    // PLACEHOLDER
    constexpr VoxelType BLOCK_BLOCK_180 = VoxelType::BLOCK_180;
    constexpr VoxelType BLOCK_BLOCK_181 = VoxelType::BLOCK_181;
    constexpr VoxelType BLOCK_BLOCK_182 = VoxelType::BLOCK_182;
    constexpr VoxelType BLOCK_BLOCK_183 = VoxelType::BLOCK_183;
    constexpr VoxelType BLOCK_BLOCK_184 = VoxelType::BLOCK_184;
    constexpr VoxelType BLOCK_BLOCK_185 = VoxelType::BLOCK_185;
    constexpr VoxelType BLOCK_BLOCK_186 = VoxelType::BLOCK_186;
    constexpr VoxelType BLOCK_BLOCK_187 = VoxelType::BLOCK_187;
    constexpr VoxelType BLOCK_BLOCK_188 = VoxelType::BLOCK_188;
    constexpr VoxelType BLOCK_BLOCK_189 = VoxelType::BLOCK_189;
    constexpr VoxelType BLOCK_BLOCK_190 = VoxelType::BLOCK_190;
    constexpr VoxelType BLOCK_BLOCK_191 = VoxelType::BLOCK_191;
    constexpr VoxelType BLOCK_BLOCK_192 = VoxelType::BLOCK_192;
    constexpr VoxelType BLOCK_BLOCK_193 = VoxelType::BLOCK_193;
    constexpr VoxelType BLOCK_BLOCK_194 = VoxelType::BLOCK_194;
    constexpr VoxelType BLOCK_BLOCK_195 = VoxelType::BLOCK_195;
    constexpr VoxelType BLOCK_BLOCK_196 = VoxelType::BLOCK_196;
    constexpr VoxelType BLOCK_BLOCK_197 = VoxelType::BLOCK_197;
    constexpr VoxelType BLOCK_BLOCK_198 = VoxelType::BLOCK_198;
    constexpr VoxelType BLOCK_BLOCK_199 = VoxelType::BLOCK_199;
    constexpr VoxelType BLOCK_BLOCK_200 = VoxelType::BLOCK_200;
    constexpr VoxelType BLOCK_BLOCK_201 = VoxelType::BLOCK_201;
    constexpr VoxelType BLOCK_BLOCK_202 = VoxelType::BLOCK_202;
    constexpr VoxelType BLOCK_BLOCK_203 = VoxelType::BLOCK_203;
    constexpr VoxelType BLOCK_BLOCK_204 = VoxelType::BLOCK_204;
    constexpr VoxelType BLOCK_BLOCK_205 = VoxelType::BLOCK_205;
    constexpr VoxelType BLOCK_BLOCK_206 = VoxelType::BLOCK_206;
    constexpr VoxelType BLOCK_BLOCK_207 = VoxelType::BLOCK_207;
    constexpr VoxelType BLOCK_BLOCK_208 = VoxelType::BLOCK_208;
    constexpr VoxelType BLOCK_BLOCK_209 = VoxelType::BLOCK_209;
    constexpr VoxelType BLOCK_BLOCK_210 = VoxelType::BLOCK_210;
    constexpr VoxelType BLOCK_BLOCK_211 = VoxelType::BLOCK_211;
    constexpr VoxelType BLOCK_BLOCK_212 = VoxelType::BLOCK_212;
    constexpr VoxelType BLOCK_BLOCK_213 = VoxelType::BLOCK_213;
    constexpr VoxelType BLOCK_BLOCK_214 = VoxelType::BLOCK_214;
    constexpr VoxelType BLOCK_BLOCK_215 = VoxelType::BLOCK_215;
    constexpr VoxelType BLOCK_BLOCK_216 = VoxelType::BLOCK_216;
    constexpr VoxelType BLOCK_BLOCK_217 = VoxelType::BLOCK_217;
    constexpr VoxelType BLOCK_BLOCK_218 = VoxelType::BLOCK_218;
    constexpr VoxelType BLOCK_BLOCK_219 = VoxelType::BLOCK_219;
    constexpr VoxelType BLOCK_BLOCK_220 = VoxelType::BLOCK_220;
    constexpr VoxelType BLOCK_BLOCK_221 = VoxelType::BLOCK_221;
    constexpr VoxelType BLOCK_BLOCK_222 = VoxelType::BLOCK_222;
    constexpr VoxelType BLOCK_BLOCK_223 = VoxelType::BLOCK_223;
    constexpr VoxelType BLOCK_BLOCK_224 = VoxelType::BLOCK_224;
    constexpr VoxelType BLOCK_BLOCK_225 = VoxelType::BLOCK_225;
    constexpr VoxelType BLOCK_BLOCK_226 = VoxelType::BLOCK_226;
    constexpr VoxelType BLOCK_BLOCK_227 = VoxelType::BLOCK_227;
    constexpr VoxelType BLOCK_BLOCK_228 = VoxelType::BLOCK_228;
    constexpr VoxelType BLOCK_BLOCK_229 = VoxelType::BLOCK_229;
    constexpr VoxelType BLOCK_BLOCK_230 = VoxelType::BLOCK_230;
    constexpr VoxelType BLOCK_BLOCK_231 = VoxelType::BLOCK_231;
    constexpr VoxelType BLOCK_BLOCK_232 = VoxelType::BLOCK_232;
    constexpr VoxelType BLOCK_BLOCK_233 = VoxelType::BLOCK_233;
    constexpr VoxelType BLOCK_BLOCK_234 = VoxelType::BLOCK_234;
    constexpr VoxelType BLOCK_BLOCK_235 = VoxelType::BLOCK_235;
    constexpr VoxelType BLOCK_BLOCK_236 = VoxelType::BLOCK_236;
    constexpr VoxelType BLOCK_BLOCK_237 = VoxelType::BLOCK_237;
    constexpr VoxelType BLOCK_BLOCK_238 = VoxelType::BLOCK_238;
    constexpr VoxelType BLOCK_BLOCK_239 = VoxelType::BLOCK_239;
    constexpr VoxelType BLOCK_BLOCK_240 = VoxelType::BLOCK_240;
    constexpr VoxelType BLOCK_BLOCK_241 = VoxelType::BLOCK_241;
    constexpr VoxelType BLOCK_BLOCK_242 = VoxelType::BLOCK_242;
    constexpr VoxelType BLOCK_BLOCK_243 = VoxelType::BLOCK_243;
    constexpr VoxelType BLOCK_BLOCK_244 = VoxelType::BLOCK_244;
    constexpr VoxelType BLOCK_BLOCK_245 = VoxelType::BLOCK_245;
    constexpr VoxelType BLOCK_BLOCK_246 = VoxelType::BLOCK_246;
    constexpr VoxelType BLOCK_BLOCK_247 = VoxelType::BLOCK_247;
    constexpr VoxelType BLOCK_BLOCK_248 = VoxelType::BLOCK_248;
    constexpr VoxelType BLOCK_BLOCK_249 = VoxelType::BLOCK_249;
    constexpr VoxelType BLOCK_BLOCK_250 = VoxelType::BLOCK_250;
    constexpr VoxelType BLOCK_BLOCK_251 = VoxelType::BLOCK_251;
    constexpr VoxelType BLOCK_BLOCK_252 = VoxelType::BLOCK_252;
    constexpr VoxelType BLOCK_BLOCK_253 = VoxelType::BLOCK_253;
    constexpr VoxelType BLOCK_BLOCK_254 = VoxelType::BLOCK_254;
    constexpr VoxelType BLOCK_BLOCK_255 = VoxelType::BLOCK_255;

}

// Utility functions
const char* voxelTypeToString(VoxelType type);
VoxelType stringToVoxelType(const std::string& name);
bool isValidVoxelType(VoxelType type);
bool isValidVoxelTypeId(uint16_t id);

// Type conversion helpers
inline uint16_t toVoxelId(VoxelType type) {
    return static_cast<uint16_t>(type);
}

inline VoxelType fromVoxelId(uint16_t id) {
    return static_cast<VoxelType>(id);
}

// Category checking functions
bool isTerrain(VoxelType type);
bool isFluid(VoxelType type);
bool isProcessed(VoxelType type);
bool isFunctional(VoxelType type);
bool isAdvanced(VoxelType type);
bool isPlaceholder(VoxelType type);

} // namespace VoxelEngine

#endif // GENERATED_VOXEL_TYPES_GENERATED_H_H
